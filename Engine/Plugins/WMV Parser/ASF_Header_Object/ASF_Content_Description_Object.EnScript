include "..\\..\\..\\Core Files\\Interfaces\\ObserverInterface"

class ASF_Content_Description_Object{

  // Header Object values
  ulong  ObjectId1;
  ulong  ObjectId2;
  long   ObjectSize;
  int    TitleLength;
  int    AuthorLength;
  int    CopyrightLength;
  int    DescriptionLength;
  int    RatingLength;
  String Title;
  String Author;
  String Copyright;
  String Description;
  String Rating;

  String            _pluginName;
  ObserverInterface _observer;

  ASF_Content_Description_Object(const String &thePluginName, ObserverInterface theObserver){
    _pluginName = thePluginName;
    _observer = theObserver;
  }

  void Read(EntryFileClass ef, const long &offset){
    ef.Seek(offset);

    ObjectId1 = ef.ReadBinaryInt(8, true);
    ObjectId2 = ef.ReadBinaryInt(8, true);
    ObjectSize = ef.ReadBinaryInt(8, false);

    if(offset + ObjectSize < ef.GetSize()){
      TitleLength = ef.ReadBinaryInt(2, false);
      AuthorLength = ef.ReadBinaryInt(2, false);
      CopyrightLength = ef.ReadBinaryInt(2, false);
      DescriptionLength = ef.ReadBinaryInt(2, false);
      RatingLength = ef.ReadBinaryInt(2, false);

      ef.SetCodePage(CodePageClass::UNICODE);

      long pos = ef.GetPos();
      ef.ReadString(Title, TitleLength);

      ef.Seek(pos + TitleLength);
      pos = ef.GetPos();
      ef.ReadString(Author, AuthorLength);

      ef.Seek(pos + AuthorLength);
      pos = ef.GetPos();
      ef.ReadString(Copyright, CopyrightLength);

      ef.Seek(pos + CopyrightLength);
      pos = ef.GetPos();
      ef.ReadString(Description, DescriptionLength);

      ef.Seek(pos + RatingLength);
      pos = ef.GetPos();
      ef.ReadString(Rating, RatingLength);

      ef.SetCodePage(CodePageClass::ANSI);

      _observer.WriteDebug(_pluginName, "    ASF_Content_Description_Object", false);
      _observer.WriteDebug(_pluginName, "    ==============================", false);
      _observer.WriteDebug(_pluginName, "      Offset: " + offset, false);
      _observer.WriteDebug(_pluginName, "      Object Size: " + ObjectSize, false);
      _observer.WriteDebug(_pluginName, "      Title: " + Title, false);
      _observer.WriteDebug(_pluginName, "      Author: " + Author, false);
      _observer.WriteDebug(_pluginName, "      Copyright: " + Copyright, false);
      _observer.WriteDebug(_pluginName, "      Description: " + Description, false);
      _observer.WriteDebug(_pluginName, "      Rating: " + Rating, false);
      _observer.WriteDebug(_pluginName, "", false);
    }
    else {
      _observer.WriteDebug(_pluginName, "Not enough data to read the contents of this object.", false);
    }

    ef.Seek(offset + ObjectSize);
  }
}
